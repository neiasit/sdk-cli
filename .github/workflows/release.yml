name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22.5

      - name: Build CLI
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -o neiasit${{ matrix.goos == 'windows' && '.exe' || '' }} ./cmd/cli

      - name: Archive neiasit binary
        run: |
          zip neiasit-${{ matrix.goos }}-${{ matrix.goarch }}.zip neiasit${{ matrix.goos == 'windows' && '.exe' || '' }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: neiasit-${{ matrix.goos }}-${{ matrix.goarch }}
          path: neiasit-${{ matrix.goos }}-${{ matrix.goarch }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: neiasit-linux-amd64
          path: .

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: neiasit-darwin-amd64
          path: .

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: neiasit-windows-amd64
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./neiasit-linux-amd64.zip
          asset_name: neiasit-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./neiasit-darwin-amd64.zip
          asset_name: neiasit-darwin-amd64.zip
          asset_content_type: application/zip

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./neiasit-windows-amd64.zip
          asset_name: neiasit-windows-amd64.zip
          asset_content_type: application/zip

  test_windows:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: neiasit-windows-amd64
          path: .

      - name: Extract Artifact
        run: Expand-Archive -Path neiasit-windows-amd64.zip -DestinationPath .

      - name: Run CLI
        run: ./neiasit.exe --help
